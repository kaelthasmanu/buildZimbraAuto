name: Build and Publish

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Read Zimbra variables from file
      id: read_zimbra_variables
      run: |
        source zimbra.ver
        echo "BUILD_RELEASE=$BUILD_RELEASE" >> $GITHUB_ENV
        echo "BUILD_RELEASE_NO=$BUILD_RELEASE_NO" >> $GITHUB_ENV
        echo "BUILD_OS=$BUILD_OS" >> $GITHUB_ENV

    - name: Run Docker command and get dynamic directory name
      id: docker_and_directory
      run: |
        # Ejecutar el comando Docker
        docker run --rm --name "zimbrabuild_ubuntu20" \
        -v ${{ github.workspace }}/volume:/home/git/BUILDS \
        -v ${{ github.workspace }}/ssh:/root/.ssh \
        -e BUILD_NO="0001" \
        -e BUILD_RELEASE="${{ env.BUILD_RELEASE }}" \
        -e BUILD_RELEASE_NO="${{ env.BUILD_RELEASE_NO }}" \
        -e BUILD_OS="${{ env.BUILD_OS }}" \
        -e BUILD_ARCH="amd64" \
        -e BUILD_TYPE="FOSS" \
        -e PKG_OS_TAG="u20" \
        -e BUILD_RELEASE_CANDIDATE="GA" \
        -e BUILD_THIRDPARTY_SERVER="files.zimbra.com" \
        -e INTERACTIVE="0" \
        docker.io/ovox/zimbrabuild-ubuntu20:latest

        # Obtener el nombre del directorio dinÃ¡mico
        DIRECTORY_NAME=$(ls -td ${{ github.workspace }}/volume/*/ | head -n1)
        echo "$DIRECTORY_NAME"
        echo "$(ls -td $DIRECTORY_NAME*)"
        echo "directory_name=$DIRECTORY_NAME" >> "$GITHUB_ENV"      

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: zimbra-package
        path: ${{ env.directory_name }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download packages
        id: download_packages
        uses: actions/download-artifact@v4
        with:
          name: zimbra-package
      
      - name: Get list directory 
        run: echo "$(ls -R)"

      - name: Get directory
        run: echo "$(pwd)"
      
      - name: Archive Release
        uses: thedoctor0/zip-release@0.7.5
        with: 
          filename: zimbra.zip

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./zimbra.zip
          asset_name: zimbra.zip
          asset_content_type: application/zip