name: Build and Publish

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Run Docker command and get dynamic directory name
      id: docker_and_directory
      run: |
        # Ejecutar el comando Docker
        docker run --rm --name "zimbrabuild_ubuntu20" \
        -v ${{ github.workspace }}/volume:/home/git/BUILDS \
        -v ${{ github.workspace }}/ssh:/root/.ssh \
        -e BUILD_NO="0001" \
        -e BUILD_RELEASE="DAFFODIL" \
        -e BUILD_RELEASE_NO="10.0.6" \
        -e BUILD_OS="UBUNTU20_64" \
        -e BUILD_ARCH="amd64" \
        -e BUILD_TYPE="FOSS" \
        -e PKG_OS_TAG="u20" \
        -e BUILD_RELEASE_CANDIDATE="GA" \
        -e BUILD_THIRDPARTY_SERVER="files.zimbra.com" \
        -e INTERACTIVE="0" \
        docker.io/ovox/zimbrabuild-ubuntu20:latest

        # Obtener el nombre del directorio dinÃ¡mico
        DIRECTORY_NAME=$(ls -td ${{ github.workspace }}/volume/*/ | head -n1)
        echo "$DIRECTORY_NAME"
        echo "$(ls -td ${{ github.workspace }}/volume/$DIRECTORY_NAME/*/")
        echo "directory_name=$DIRECTORY_NAME" >> "$GITHUB_ENV"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: zimbra-package
        path: ${{steps.docker_and_directory.outputs.directory_name}}/*.tgz

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download packages
        uses: actions/download-artifact@v4
        with:
          name: zimbra-package
          path: ./pkgs
          
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "./pkgs/*.tgz"
          tag: ${{ github.ref_name }}
